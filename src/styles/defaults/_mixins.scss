@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media only screen and (max-width: 30em) { @content };   // 425px
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 65em) { @content };   // 1024px
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 90em) { @content };   // 1440
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content }; // >1800
    }
}

@mixin absCenter {
    position: absolute;
    top: 50%; left: 50%;
    transform: translate(-50%, -50%);
}

@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin displayFlex($flDirection, $flWrap, $flAContent, $flJContent, $flAAtimes ) {
    display: flex;
    flex-direction: $flDirection;
    flex-wrap: $flWrap;
    align-content: $flAContent;
    justify-content: $flJContent;
    align-items: $flAAtimes;
}

@mixin grid($align-content, $justify-content, $align-items, $justify-items) {
    display: grid;
    align-content: $align-content;
    justify-content: $justify-content;
    align-items: $align-items;
    justify-items: $justify-items;
}

@mixin fonts($color, $size, $weight, $line-height) {
    color: $color;
    font-size: $size;
    font-weight: $weight;
    line-height: $line-height;
}

@mixin link-default($font-size, $color, $hover-color) {
    font-size: $font-size;
    color: $color;
    text-decoration: none;
    &:focus {
      outline: none;
    }
    &:hover {
      color: $hover-color;
    }
}